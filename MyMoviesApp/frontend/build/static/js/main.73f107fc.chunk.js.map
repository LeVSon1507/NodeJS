{"version":3,"sources":["customHooks/useFetch.jsx","config.jsx","requestsApi.jsx","components/Banner/Banner.jsx","components/MovieDetail/MovieDetail.js","components/MovieList/MovieList.js","components/NavBar/NavBar.jsx","pages/browse/Browse.jsx","components/SearchForm/SearchForm.js","components/ResultList/ResultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useFetch","url","_useState","useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","isLoading","setIsLoading","handleResponse","_ref","_asyncToGenerator","_callee","response","data","_context","status","json","_x","apply","arguments","fetchData","_ref2","_callee2","_context2","fetch","concat","t0","console","log","useEffect","reLoad","_ref3","_callee3","_context3","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Banner","_useFetch","randomMovie","Math","floor","random","React","createElement","className","src","backdrop_path","alt","overview","MovieDetail","_results$results","movieData","isShowMovieDetail","isBannerList","id","title","release_date","vote_average","poster_path","trailerMovie","find","movie","site","moment","format","YouTube","videoId","opts","height","width","playerVars","autoplay","style","MovieList","apiEndpoint","isOriginal","setIsShowMovieDetail","setIsBannerList","_useState5","_useState6","setMovie","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","cssEase","handleShowDetails","Slider","map","onClick","NavBar","navBarClass","setNavBarClass","handleScroll","window","scrollY","addEventListener","removeEventListener","Link","to","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","Browse","SearchForm","searchValue","handleSearchValue","handleSearch","handleReset","onChange","ResultList","isSearch","Fragment","Search","setSearchValue","setIsSearch","e","target","App","BrowserRouter","Routes","Route","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.73f107fc.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nfunction useFetch(url) {\r\n   const [results, setResults] = useState({});\r\n   const [isLoading, setIsLoading] = useState(false);\r\n\r\n   const handleResponse = async response => {\r\n      if (response.status === 200) {\r\n         const data = await response.json();\r\n         setResults(data);\r\n      }\r\n      setIsLoading(false);\r\n   };\r\n\r\n   const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n         const response = await fetch(`https://api.themoviedb.org/3${url}`);\r\n         handleResponse(response);\r\n      } catch (error) {\r\n         console.log(error);\r\n         setIsLoading(false);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      fetchData();\r\n      // eslint-disable-next-line\r\n   }, [url]);\r\n\r\n   const reLoad = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n         const response = await fetch(`https://api.themoviedb.org/3${url}`);\r\n         handleResponse(response);\r\n      } catch (error) {\r\n         console.log(error);\r\n         setIsLoading(false);\r\n      }\r\n   };\r\n\r\n   return { results, isLoading, reLoad };\r\n}\r\n\r\nexport default useFetch;\r\n","export const API_KEY = `475dbd3c6ea41a0420d36fa392df5a6b`;\r\n","import { API_KEY } from './config';\r\n\r\nexport const requests = {\r\n   fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n   fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n   fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n   fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n   fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n   fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n   fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n   fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n   fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\n","import React from 'react';\r\nimport useFetch from '../../customHooks/useFetch';\r\nimport { requests } from '../../requestsApi';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n   const url = requests.fetchNetflixOriginals;\r\n   const { results, isLoading } = useFetch(url);\r\n   // Kiểm tra xem đối tượng results có chứa dữ liệu hay không\r\n   if (!results || !results.results || results.results.length === 0) {\r\n      return null;\r\n   }\r\n   // Lấy ngẫu nhiên một phim từ danh sách các phim trả về\r\n   const randomMovie = results.results[Math.floor(Math.random() * results.results.length)];\r\n\r\n   return (\r\n      <div className='container'>\r\n         {isLoading ? (\r\n            <h1 className='loading'>Loading...</h1>\r\n         ) : (\r\n            <div className='banner-container'>\r\n               <img\r\n                  src={`https://image.tmdb.org/t/p/original/${randomMovie.backdrop_path}`}\r\n                  alt={randomMovie.name}\r\n                  className='banner-img'\r\n               />\r\n               <div className='infoGroup'>\r\n                  <h1 className='banner-name'>{randomMovie.name}</h1>\r\n                  <div className='btnGroup'>\r\n                     <button className='buttonBannerPlay'>Play</button>\r\n                     <button className='buttonBannerMyList'>My List</button>\r\n                  </div>\r\n                  <p className='banner-overview'>{randomMovie.overview}</p>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport { API_KEY } from \"../../config\";\r\nimport useFetch from \"../../customHooks/useFetch\";\r\nimport moment from 'moment';\r\nimport YouTube from 'react-youtube';\r\nimport './MovieDetail.css';\r\n\r\nfunction MovieDetail({ movieData, isShowMovieDetail, isBannerList }) {\r\n    const { id, title, release_date, vote_average, backdrop_path, overview, poster_path, name } = movieData;\r\n    const url = `/movie/${id}/videos?api_key=${API_KEY}`;\r\n    const { results, isLoading } = useFetch(url);\r\n\r\n    const trailerMovie = results?.results?.find(movie => {\r\n        return movie.site === \"YouTube\" && (movie.type === \"Trailer\" || movie.type === \"Teaser\");\r\n    });\r\n\r\n    const opts = {\r\n        height: '400',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoplay: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        isShowMovieDetail && <div className=\"movieDetails\">\r\n            <div className=\"movieDetailContainer\">\r\n                <h1 className='title'>{isBannerList ? name : title}</h1>\r\n                <div className=\"line\"></div>\r\n                <h4>Release Date: {moment(release_date).format(\"YYYY-MM-DD\")}</h4>\r\n                <h4 className='vote'>Vote: {vote_average}/10</h4>\r\n                <p >{overview}</p>\r\n            </div>\r\n            {isLoading && <h1>Loading...</h1>}\r\n            {\r\n                !isLoading && trailerMovie && (\r\n                    <div className=\"trailer\">\r\n                        <YouTube videoId={trailerMovie.key} opts={opts} />\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                !isLoading && !trailerMovie && (\r\n                    <img src={\r\n                        isBannerList ?\r\n                            `https://image.tmdb.org/t/p/original${poster_path}`\r\n                            : `https://image.tmdb.org/t/p/original${backdrop_path}`\r\n                    } alt=\"Backdrop\" style={{ width: \"100%\" }} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","import React, { useState } from \"react\";\r\nimport useFetch from \"../../customHooks/useFetch\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport './MovieList.css';\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\n\r\nfunction MovieList({ apiEndpoint, isOriginal }) {\r\n    const { results, isLoading } = useFetch(apiEndpoint)\r\n    const [isShowMovieDetail, setIsShowMovieDetail] = useState(false);\r\n    const [isBannerList, setIsBannerList] = useState(false);\r\n    const [movie, setMovie] = useState({});\r\n    // let movieId;\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 1000,\r\n        slidesToShow: 9,\r\n        slidesToScroll: 5,\r\n        // autoplay: true,\r\n        autoplaySpeed: 3000,\r\n        cssEase: 'linear'\r\n    };\r\n    const handleShowDetails = (movie, isOriginal) => {\r\n        setIsShowMovieDetail(!isShowMovieDetail)\r\n        setMovie(movie)\r\n        setIsBannerList(isOriginal)\r\n    }\r\n    return (\r\n        <div className=\"movieList\">\r\n            {isLoading ? <h1>Loading...</h1> : <Slider {...settings}>\r\n                {results?.results?.map(movie => {\r\n                    return (\r\n                        <div className=\"movieItem\" key={movie.id}>\r\n                            {isOriginal ?\r\n                                <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`} alt={movie.title || movie.name} className=\"movieImgPoster\" onClick={() => handleShowDetails(movie, isOriginal)} />\r\n                                :\r\n                                <img src={`https://image.tmdb.org/t/p/w185/${movie.backdrop_path}`} alt={movie.title || movie.name} className=\"movieImgBackDrop\" onClick={() => handleShowDetails(movie, isOriginal)} />\r\n                            }\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Slider>}\r\n            {<MovieDetail isShowMovieDetail={isShowMovieDetail} movieData={movie} isBannerList={isBannerList} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = () => {\r\n   const [navBarClass, setNavBarClass] = useState('transparent');\r\n\r\n   useEffect(() => {\r\n      const handleScroll = () => {\r\n         if (window.scrollY > 100) {\r\n            setNavBarClass('black');\r\n         } else {\r\n            setNavBarClass('transparent');\r\n         }\r\n      };\r\n      window.addEventListener('scroll', handleScroll);\r\n      return () => {\r\n         window.removeEventListener('scroll', handleScroll);\r\n      };\r\n   }, []);\r\n\r\n   return (\r\n      <nav className={`navbar ${navBarClass}`}>\r\n         <div className='container'>\r\n            <Link to='/' className='navbar-title'>\r\n               Movie App\r\n            </Link>\r\n            <div className='navbar-search'>\r\n               <Link to='/search' className='navbar-search-link'>\r\n                  <svg\r\n                     className='svg-inline--fa fa-search fa-w-16'\r\n                     fill='#ccc'\r\n                     aria-hidden='true'\r\n                     data-prefix='fas'\r\n                     data-icon='search'\r\n                     role='img'\r\n                     xmlns='http://www.w3.org/2000/svg'\r\n                     viewBox='0 0 512 512'\r\n                  >\r\n                     <path d='M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z'></path>\r\n                  </svg>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport Banner from '../../components/Banner/Banner';\nimport MovieList from '../../components/MovieList/MovieList';\nimport NavBar from '../../components/NavBar/NavBar';\nimport { requests } from '../../requestsApi';\nimport './Browse.css';\n\nfunction Browse() {\n   return (\n      <div className='browseContainer'>\n         <NavBar />\n         <Banner />\n         <MovieList apiEndpoint={requests.fetchNetflixOriginals} isOriginal={true} />\n\n         <h3>Xu Hướng</h3>\n         <MovieList apiEndpoint={requests.fetchTrending} />\n\n         <h3>Xếp hạng cao</h3>\n         <MovieList apiEndpoint={requests.fetchTopRated} />\n\n         <h3>Hành động</h3>\n         <MovieList apiEndpoint={requests.fetchActionMovies} />\n\n         <h3>Hài</h3>\n         <MovieList apiEndpoint={requests.fetchComedyMovies} />\n\n         <h3>Kinh dị</h3>\n         <MovieList apiEndpoint={requests.fetchHorrorMovies} />\n\n         <h3>Lãng mạng</h3>\n         <MovieList apiEndpoint={requests.fetchRomanceMovies} />\n\n         <h3>Tài liệu</h3>\n         <MovieList apiEndpoint={requests.fetchDocumentaries} />\n      </div>\n   );\n}\n\nexport default Browse;\n","import React from \"react\";\r\nimport './SearchForm.css'\r\n\r\nfunction SearchForm({ searchValue, handleSearchValue, handleSearch, handleReset }) {\r\n\r\n    return (\r\n        <div className=\"searchForm\">\r\n            <div className=\"inputGr\">\r\n                <input type=\"text\" className=\"searchInput\" onChange={handleSearchValue} value={searchValue} />\r\n                <svg\r\n                    className='svg-inline--fa fa-search fa-w-16'\r\n                    fill='#ccc'\r\n                    aria-hidden='true'\r\n                    data-prefix='fas'\r\n                    data-icon='search'\r\n                    width={200}\r\n                    height={200}\r\n                    role='img'\r\n                    xmlns='http://www.w3.org/2000/svg'\r\n                    viewBox='0 0 512 512'\r\n                    onClick={handleSearch}\r\n                >\r\n                    <path d='M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z'></path>\r\n                </svg>\r\n            </div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"btnSearchGr\">\r\n                <button className=\"resetBtn\" onClick={handleReset}>RESET</button>\r\n                <button className=\"searchBtn\" onClick={handleSearch} >SEARCH</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from \"react\";\r\nimport useFetch from \"../../customHooks/useFetch\";\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\nimport './ResultList.css'\r\n\r\nfunction ResultList({ url, isSearch }) {\r\n    const { results, isLoading } = useFetch(url)\r\n    const [isShowMovieDetail, setIsShowMovieDetail] = useState(false);\r\n    const [movie, setMovie] = useState({});\r\n\r\n    const handleShowDetails = (movie) => {\r\n        setIsShowMovieDetail(!isShowMovieDetail)\r\n        setMovie(movie)\r\n    }\r\n    return (\r\n        <div className=\"resultList\">\r\n            {isLoading ? <h1>Loading...</h1> : <div className=\"resultContainer\">\r\n                {isSearch && results?.results?.map(movie => {\r\n                    return (\r\n                        <>\r\n                            <div className=\"resultItem\" key={movie.name}>\r\n                                <img src={`https://image.tmdb.org/t/p/w185/${movie.poster_path}`} alt={movie.title || movie.name} className=\"resultPoster\" onClick={() => handleShowDetails(movie)} />\r\n                            </div>\r\n                        </>\r\n                    )\r\n                })}\r\n                {<MovieDetail isShowMovieDetail={isShowMovieDetail} movieData={movie} isBannerList={false} />}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultList;\r\n","import React, { useState } from 'react';\nimport './Search.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport { API_KEY } from '../../config';\nimport ResultList from '../../components/ResultList/ResultList';\n\nconst Search = () => {\n   const [searchValue, setSearchValue] = useState('');\n   const [isSearch, setIsSearch] = useState(false);\n   const url = `/search/movie?api_key=${API_KEY}&language=en&query=${searchValue}`;\n   const handleSearchValue = e => {\n      setSearchValue(e.target.value);\n   };\n   const handleSearch = () => {\n      setIsSearch(true);\n   };\n   const handleReset = () => {\n      setIsSearch(false);\n      setSearchValue('');\n   };\n\n   return (\n      <div className='searchContainer'>\n         <NavBar />\n         <SearchForm\n            searchValue={searchValue}\n            setSearchValue={setSearchValue}\n            handleSearchValue={handleSearchValue}\n            handleSearch={handleSearch}\n            handleReset={handleReset}\n         />\n         <h2>Search Result</h2>\n         <ResultList url={url} isSearch={isSearch} />\n      </div>\n   );\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute,\n} from \"react-router-dom\";\n\nimport Browse from './pages/browse/Browse';\nimport Search from './pages/search/Search';\n\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<Browse />} />\n\t\t\t\t<Route path=\"/search\" element={<Search />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\t// Sử dụng biến process ở đây\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}